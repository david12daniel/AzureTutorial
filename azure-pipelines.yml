# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master



strategy:
  matrix:
    linux3.7:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
    linux3.6:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
    mac3.7:
      imageName: 'macos-latest'
      python.version: '3.7'
    mac3.6:
      imageName: 'macos-latest'
      python.version: '3.6'
    windows3.7:
      imageName: 'vs2017-win2016'
      python.version: '3.7'
    windows3.6:
      imageName: 'vs2017-win2016'
      python.version: '3.6'
  maxParallel: 3
pool:
  vmImage: $(imageName)




#pool: 
#  linux:
#    vmImage: 'ubuntu-latest'
#  windows:
#    vmImage: 'windows-latest'
#  macos:
#    vmImage: 'macos-10.13'

#strategy:
#  matrix:
#    Python36:
#      python.version: '3.6'
#    Python37:
#      python.version: '3.7'
#  maxParallel: 3

steps:
- task: UsePythonVersion@0
  inputs:
#    versionSpec: '$(python.version)'
#  displayName: 'Use Python $(python.version)'
    versionSpec: '3.7'
  displayName: 'Use Python 3.7'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
